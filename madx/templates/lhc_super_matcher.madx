!@require %(LIB)s
!@require segments

!!! Sequences definition
option, -echo, -warn;
    %(MAIN_SEQ)s
    exec, cycle_sequences();
    exec, define_nominal_beams();
    exec, set_default_crossing_scheme();
option, echo, warn;

extract_segment_sequence(base_seq, front_seq, back_seq, start_from, end_at): macro = {
    SEQEDIT, SEQUENCE=base_seq;
    FLATTEN;               
    CYCLE, START=start_from;
    ENDEDIT;

    EXTRACT, SEQUENCE=base_seq, FROM=start_from, TO=end_at, NEWNAME=front_seq;
    seqedit, sequence=front_seq;
    flatten;
    endedit;

    EXTRACT, SEQUENCE=base_seq, FROM=start_from, TO=end_at, NEWNAME=back_seq;
    seqedit, sequence=back_seq;
    flatten;
    reflect; ! reverse command
    endedit;
};

twiss_segment(sequence, filename, init_vals): macro = {
    use, period = sequence;
    exec, select_elements();
    twiss, beta0 = init_vals, chrom, file = filename;
};

!!! Extract segments sequences
%(EXTRACT_SEQUENCES)s


!!! Initial values gathering
%(SET_INITIAL_VALUES)s

%(DEFINE_CONSTRAINTS_AUX_VALS)s

!!!!!! Matching !!!!!!

%(START_MATCH)s

%(DEFINE_VARIABLES)s

option, -warn;
%(SET_MATCHING_MACROS)s
option, warn;

%(END_MATCH)s


!!! Generating final changeparameters file
select, flag=save, clear;
%(GEN_CHANGEPARAMETERS)s
%(SAVE_CHANGEPARAMETERS)s

!!! Running corrected twiss
%(RUN_CORRECTED_TWISS)s
