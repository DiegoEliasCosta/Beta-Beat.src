'''
Created on 15 Oct 2013

@author: vimaier
'''
import unittest

import Utilities.iotools

class TestReplacingKeywords(unittest.TestCase):
    """ tests function Utilities.iotools.replace_keywords_in_textfile """

    def setUp(self):
        self.__created_files = []
        self.__text_before_replacing = """This file was generated by Utilities.test.iotools_test.py
The following should be equal after replacing:
%(key_a)s == value_for_key_a
%(key_b)s == 2345.2123
%(key_c)d == 2345
%(key_d)f == 2345.212300
"""
        self.__text_after_replacing = """This file was generated by Utilities.test.iotools_test.py
The following should be equal after replacing:
value_for_key_a == value_for_key_a
2345.2123 == 2345.2123
2345 == 2345
2345.212300 == 2345.212300
"""
        self.__dict_for_replacing = {
                        "key_a" : "value_for_key_a",
                        "key_b" : 2345.2123,
                        "key_c" : 2345.2123,
                        "key_d" : 2345.2123
        }
        f_name = "replacing_test.txt"
        Utilities.iotools.write_string_into_new_file(f_name, self.__text_before_replacing)
        self.__created_files.append(f_name)
        self.__created_files.append("replaced_test.txt")


    def tearDown(self):
        for f_name in self.__created_files:
            Utilities.iotools.delete_item(f_name)


    def test_replacing(self):
        assumed_lines = self.__text_after_replacing

        Utilities.iotools.replace_keywords_in_textfile("replacing_test.txt", self.__dict_for_replacing, "replaced_test.txt")
        all_lines = Utilities.iotools.read_all_lines_in_textfile("replaced_test.txt")
        self.assertTrue(all_lines == assumed_lines, "Strings are not equal:\n"+all_lines+assumed_lines)

        # Tests replacing in same file
        Utilities.iotools.replace_keywords_in_textfile("replacing_test.txt", self.__dict_for_replacing)
        all_lines = Utilities.iotools.read_all_lines_in_textfile("replacing_test.txt")
        self.assertTrue(all_lines == assumed_lines, "Strings are not equal:\n"+all_lines+assumed_lines)




if __name__ == "__main__":
    #import sys;sys.argv = ['', 'Test.testName']
    unittest.main()